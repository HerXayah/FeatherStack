version: '3.8'

volumes:
   linkstack_data:
      driver: local
      driver_opts:
         type: none
         o: bind
         device: /opt/linkstack/
   portainer_data:
   crowdsec_db:
      driver: local
      driver_opts:
         type: none
         o: bind
         device: /opt/crowdsec_data/
   prometheus_data: {}
   nginxmain_data:
      driver: local
      driver_opts:
         type: none
         o: bind
         device: /var/log/nginxmain
   nginxgames_data:
      driver: local
      driver_opts:
         type: none
         o: bind
         device: /var/log/nginxgames
   traefik_data:
      driver: local
      driver_opts:
         type: none
         o: bind
         device: /var/log/traefik
   pbdb-data:
      driver: local
      driver_opts:
         type: none
         o: bind
         device: /opt/plausible/db
   pbdbevent-data:
      driver: local
      driver_opts:
         type: none
         o: bind
         device: /opt/plausible/events
   db-data:
      driver: local
      driver_opts:
         type: none
         o: bind
         device: /opt/komodo/dbdata
   db-config:
      driver: local
      driver_opts:
         type: none
         o: bind
         device: /opt/komodo/dbconfig
   komodo-repos:
      driver: local
      driver_opts:
         type: none
         o: bind
         device: /opt/komodo/repos
   komodo-stacks:
      driver: local
      driver_opts:
         type: none
         o: bind
         device: /opt/komodo/stacks

services:
   crowdsec:
      image: crowdsecurity/crowdsec:latest
      container_name: crowdsec
      restart: unless-stopped
      environment:
         GID: '${GID-1000}'
         COLLECTIONS: 'crowdsecurity/linux crowdsecurity/traefik crowdsecurity/http-cve crowdsecurity/whitelist-good-actors crowdsecurity/sshd crowdsecurity/nginx crowdsecurity/iptables'
      volumes:
         - /var/run/docker.sock:/var/run/docker.sock:ro
         - /etc/localtime:/etc/localtime:ro
         - /opt/crowdsec/:/etc/crowdsec/
         - /var/log/auth.log:/var/log/auth.log:ro
         - /var/log/journal:/var/log/host:ro
         - nginxmain_data:/var/log/crowdsec/nginxmain:ro
         - nginxgames_data:/var/log/crowdsec/nginxgames:ro
         - traefik_data:/var/log/traefik:ro
         - crowdsec_db:/var/lib/crowdsec/data/
      security_opt:
         - no-new-privileges:true
      hostname: crowdsec
   crowdsec-traefik-bouncer:
      image: fbonalair/traefik-crowdsec-bouncer:latest
      container_name: bouncer-traefik
      restart: unless-stopped
      environment:
         - CROWDSEC_AGENT_HOST=crowdsec:8081
         - CROWDSEC_BOUNCER_API_KEY=${CROWDSEC_BOUNCER_API_KEY}
         - GIN_MODE=debug
      depends_on:
         - crowdsec
   nginx:
      image: fholzer/nginx-brotli:v1.26.2
      container_name: nginx-node
      restart: unless-stopped
      environment:
         - NGINX_PORT=80
      labels:
         - 'traefik.enable=true'
         - 'traefik.http.routers.nginx.rule=Host(`egirldev.co.uk`) || Host(`egirl.ing`)'
         - 'traefik.http.routers.nginx.entrypoints=http'
         - 'traefik.http.routers.nginx.middlewares=nginx-https-redirect'
         - 'traefik.http.middlewares.nginx-https-redirect.redirectscheme.scheme=https'
         - 'traefik.http.routers.nginx-secure.rule=Host(`egirldev.co.uk`) || Host(`egirl.ing`)'
         - 'traefik.http.routers.nginx-secure.entrypoints=https'
         - 'traefik.http.routers.nginx-secure.tls=true'
         - 'traefik.http.routers.nginx-secure.tls.certresolver=cloudflare'
         - 'traefik.http.routers.nginx-secure.tls.domains[0].main=egirldev.co.uk'
         - 'traefik.http.routers.nginx-secure.tls.domains[0].sans=*.egirldev.co.uk'
         - 'traefik.http.routers.nginx-secure.tls.domains[1].sans=egirl.ing'
         - 'traefik.http.routers.nginx-secure.tls.domains[1].main=egirl.ing'
         - 'traefik.http.routers.nginx-secure.service=nginx-node'
         - 'traefik.http.services.nginx-node.loadbalancer.server.port=80'
      volumes:
         - /opt/html/egirl:/usr/share/nginx/html:ro
         - nginxmain_data:/var/log/nginx/:rw
   nginx-2:
      image: fholzer/nginx-brotli:v1.26.2
      container_name: nginx-playnite
      restart: unless-stopped
      environment:
         - NGINX_PORT=80
      labels:
         - 'traefik.enable=true'
         - 'traefik.http.routers.nginx-2.rule=Host(`games.egirldev.co.uk`) || Host(`games.egirl.ing`)'
         - 'traefik.http.routers.nginx-2.entrypoints=http'
         - 'traefik.http.routers.nginx-2.middlewares=nginx-https-redirect'
         - 'traefik.http.middlewares.nginx-https-redirect.redirectscheme.scheme=https'
         - 'traefik.http.routers.nginx-2-secure.rule=Host(`games.egirldev.co.uk`) || Host(`games.egirl.ing`)'
         - 'traefik.http.routers.nginx-2-secure.entrypoints=https'
         - 'traefik.http.routers.nginx-2-secure.tls=true'
         - 'traefik.http.routers.nginx-2-secure.tls.certresolver=cloudflare'
         - 'traefik.http.routers.nginx-2-secure.tls.domains[0].main=egirldev.co.uk'
         - 'traefik.http.routers.nginx-2-secure.tls.domains[0].sans=games.egirldev.co.uk'
         - 'traefik.http.routers.nginx-2-secure.tls.domains[1].sans=games.egirl.ing'
         - 'traefik.http.routers.nginx-2-secure.tls.domains[1].main=games.egirl.ing'
         - 'traefik.http.routers.nginx-2-secure.service=nginx-playnite'
         - 'traefik.http.services.nginx-playnite.loadbalancer.server.port=80'
      volumes:
         - /opt/html/Playnite-Export:/usr/share/nginx/html:ro
         - nginxgames_data:/var/log/nginx/
   authelia:
      image: authelia/authelia:latest
      container_name: authelia
      restart: unless-stopped
      volumes:
         - /opt/authelia:/config
         - /etc/localtime:/etc/localtime:ro
      environment:
         - TZ=Europe/Berlin
      labels:
         - 'traefik.enable=true'
         - 'traefik.http.routers.authelia.entrypoints=http'
         - 'traefik.http.routers.authelia.rule=Host(`auth.egirldev.co.uk`) || Host(`auth.egirl.ing`)'
         - 'traefik.http.middlewares.authelia-https-redirect.redirectscheme.scheme=https'
         - 'traefik.http.routers.authelia.middlewares=authelia-https-redirect'
         - 'traefik.http.routers.authelia-secure.entrypoints=https'
         - 'traefik.http.routers.authelia-secure.rule=Host(`auth.egirldev.co.uk`) || Host(`auth.egirl.ing`)'
         - 'traefik.http.routers.authelia-secure.tls=true'
         - 'traefik.http.routers.authelia-secure.tls.certresolver=cloudflare'
         - 'traefik.http.routers.authelia-secure.tls.domains[0].main=egirldev.co.uk'
         - 'traefik.http.routers.authelia-secure.tls.domains[0].sans=auth.egirldev.co.uk'
         - 'traefik.http.routers.authelia-secure.tls.domains[1].sans=auth.egirl.ing'
         - 'traefik.http.routers.authelia-secure.tls.domains[1].main=auth.egirl.ing'
         #- 'traefik.http.routers.authelia-secure.service=authelia'
         - 'traefik.http.services.authelia.loadbalancer.server.port=9091'
         - 'traefik.http.middlewares.authelia.forwardAuth.address=http://authelia:9091/api/authz/forward-auth'
         - 'traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader=true'
         - 'traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Email,Remote-Name'

   #portainer:
   #   image: ghcr.io/mbecker20/komodo:latest
   #   container_name: portainer
   #   restart: unless-stopped
   #   depends_on:
   #      - komodo-mongo
   #   ports:
   #      - 9120:9120
   #   extra_hosts: # allows for local periphery connection at "http://host.docker.internal:8120"
   #      - host.docker.internal:host-gateway
   #   labels:
   #      - 'traefik.enable=true'
   #       - 'traefik.http.routers.portainer.entrypoints=http'
   #       - 'traefik.http.routers.portainer.rule=Host(`portainer.egirldev.co.uk`) || Host(`portainer.egirl.ing`)'
   #       - 'traefik.http.middlewares.portainer-https-redirect.redirectscheme.scheme=https'
   #       - 'traefik.http.routers.portainer.middlewares=portainer-https-redirect'
   #       - 'traefik.http.routers.portainer-secure.entrypoints=https'
   #       - 'traefik.http.routers.portainer-secure.rule=Host(`portainer.egirldev.co.uk`) || Host(`portainer.egirl.ing`)'
   #       - 'traefik.http.routers.portainer-secure.tls=true'
   #       - 'traefik.http.routers.portainer-secure.tls.certresolver=cloudflare'
   #       - 'traefik.http.routers.portainer-secure.tls.domains[0].main=egirldev.co.uk'
   #       - 'traefik.http.routers.portainer-secure.tls.domains[0].sans=portainer.egirldev.co.uk'
   #       - 'traefik.http.routers.portainer-secure.tls.domains[1].sans=portainer.egirl.ing'
   #       - 'traefik.http.routers.portainer-secure.tls.domains[1].main=portainer.egirl.ing'
   #       - 'traefik.http.routers.portainer-secure.service=portainer'
   #       - 'traefik.http.services.portainer.loadbalancer.server.port=9120'
   #    environment: # https://github.com/mbecker20/komodo/blob/main/config_example/core.config.example.toml
   #       KOMODO_HOST: https://portainer.egirl.ing
   #       KOMODO_TITLE: Egirltainer # Change the app title, displayed in the browser tab.
   #       ## MONGO
   #       KOMODO_MONGO_ADDRESS: komodo-mongo:27017
   #       KOMODO_MONGO_USERNAME: ${KOMODO_MONGO_USERNAME}
   #       KOMODO_MONGO_PASSWORD: ${KOMODO_MONGO_PASSWORD}
   #       KOMODO_PASSKEY: ${KOMODO_PASSKEY}
   #       KOMODO_WEBHOOK_SECRET: ${KOMODO_WEBHOOK_SECRET}
   #       KOMODO_JWT_SECRET: ${KOMODO_JWT_SECRET}
   #       KOMODO_LOCAL_AUTH: true # the default is false.
   #       # KOMODO_GITHUB_OAUTH_ENABLED: true # also support google oauth
   #       # KOMODO_GITHUB_OAUTH_ID: your_oauth_id
   #       # KOMODO_GITHUB_OAUTH_SECRET: your_oauth_secret
   #       ## AWS
   #       # KOMODO_AWS_ACCESS_KEY_ID: your_aws_key_id
   #       # KOMODO_AWS_SECRET_ACCESS_KEY: your_secret_access_key
   #       ## HETZNER
   #       # KOMODO_HETZNER_TOKEN: your_hetzner_token
   # komodo-mongo:
   #    image: mongo
   #    command: --quiet # suppress mongo logs a bit
   #    restart: unless-stopped
   #    logging:
   #       driver: local
   #    ports:
   #       - 27017:27017
   #    volumes:
   #       - db-data:/data/db
   #       - db-config:/data/configdb
   #    environment:
   #       MONGO_INITDB_ROOT_USERNAME: ${KOMODO_MONGO_USERNAME} # change these
   #       MONGO_INITDB_ROOT_PASSWORD: ${KOMODO_MONGO_PASSWORD}
   # komodo-periphery:
   #    image: ghcr.io/mbecker20/periphery:latest # use ghcr.io/mbecker20/periphery:latest-aarch64 for arm support
   #    logging:
   #       driver: local
   #    ports:
   #       - 8120:8120
   #    volumes:
   #       - /var/run/docker.sock:/var/run/docker.sock
   #       - komodo-repos:/etc/komodo/repos # manage repos in a docker volume, or change it to an accessible host directory.
   #       - komodo-stacks:/etc/komodo/stacks # manage stacks in a docker volume, or change it to an accessible host directory.
   #    # environment:
   #    #   # If the disk size is overreporting, can use one of these to
   #    #   # whitelist / blacklist the disks to filter them, whichever is easier.
   #    #   PERIPHERY_INCLUDE_DISK_MOUNTS: /etc/komodo/repos
   #    #   PERIPHERY_EXCLUDE_DISK_MOUNTS: /snap

   traefik:
      image: traefik:latest
      restart: unless-stopped
      container_name: traefik
      ports:
         - '80:80'
         - '8080:8080'
         - '443:443'
      volumes:
         - /var/run/docker.sock:/var/run/docker.sock:ro
         - /etc/localtime:/etc/localtime:ro
         - /opt/traefik/traefik.yml:/traefik.yml:ro
         - /opt/traefik/dynamic_conf.yml:/dynamic_conf.yml:ro
         - /opt/traefik/acme.json:/acme.json
         - /opt/traefik/config.yml:/config.yml:ro
         - traefik_data:/var/log/traefik/
      environment:
         - TZ=Europe/Berlin
         - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
         - CLOUDFLARE_API_KEY=${CLOUDFLARE_TOKEN}
         - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      labels:
         - 'traefik.enable=true'
         - 'traefik.http.routers.traefik.entrypoints=http'
         - 'traefik.http.routers.traefik.rule=Host(`traefik.egirldev.co.uk`) || Host(`traefik.egirl.ing`)'
         - 'traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https'
         - 'traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https'
         - 'traefik.http.routers.traefik.middlewares=traefik-https-redirect'
         - 'traefik.http.routers.traefik-secure.entrypoints=https'
         - 'traefik.http.routers.traefik-secure.rule=Host(`traefik.egirldev.co.uk`) || Host(`traefik.egirl.ing`)'
         - 'traefik.http.routers.traefik-secure.middlewares=authelia'
         - 'traefik.http.routers.traefik-secure.tls=true'
         - 'traefik.http.routers.traefik-secure.tls.certresolver=cloudflare'
         - 'traefik.http.routers.traefik-secure.tls.domains[0].main=egirldev.co.uk'
         - 'traefik.http.routers.traefik-secure.tls.domains[0].sans=traefik.egirldev.co.uk'
         - 'traefik.http.routers.traefik-secure.tls.domains[1].sans=traefik.egirl.ing'
         - 'traefik.http.routers.traefik-secure.tls.domains[1].main=traefik.egirl.ing'
         - 'traefik.http.routers.traefik-secure.service=api@internal'
   cf-companion:
      container_name: cf-companion
      restart: unless-stopped
      image: tiredofit/traefik-cloudflare-companion:latest
      volumes:
         - /var/run/docker.sock:/var/run/docker.sock:ro
      environment:
         - TZ=Europe/Berlin
         - TRAEFIK_VERSION=2
         - CF_EMAIL=${CLOUDFLARE_EMAIL}
         - CF_TOKEN=${CLOUDFLARE_TOKEN}
         - RC_TYPE=CNAME
         - TARGET_DOMAIN=egirl.ing
         - DOMAIN1=egirldev.co.uk
         - DOMAIN3=egirl.ing
         - DOMAIN1_ZONE_ID=${DOMAIN1_ZONE_ID}
         - DOMAIN3_ZONE_ID=${DOMAIN3_ZONE_ID}
         - DOMAIN1_ACME=true
         - DOMAIN1_ACME_DNS_PROVIDER=cloudflare
         - DOMAIN1_PROXIED=TRUE
         - DOMAIN3_ACME=true
         - DOMAIN3_ACME_DNS_PROVIDER=cloudflare
         - DOMAIN3_PROXIED=TRUE
   endlessh:
      image: shizunge/endlessh-go:latest
      container_name: endlessh
      command:
         - -port=22
      restart: unless-stopped
      ports:
         - '22:22'
      labels:
         - 'traefik.enable=false'
   watchtower:
      restart: unless-stopped
      image: containrrr/watchtower:latest
      command:
         - --schedule=0 0 */6 * * *
         - --cleanup=true
      container_name: watchtower
      environment:
         - WATCHTOWER_NOTIFICATIONS=shoutrrr
         - WATCHTOWER_NOTIFICATION_URL=${DISCORD_WATCHTOWERR}
         - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      volumes:
         - /var/run/docker.sock:/var/run/docker.sock
      labels:
         - 'traefik.enable=false'
   Teamspeak:
      image: teamspeak:latest
      container_name: teamspeak
      restart: unless-stopped
      volumes:
         - /opt/Teamspeak:/var/ts3server
      ports:
         - '9987:9987/udp'
         - '10011:10011'
         - '30033:30033'
      labels:
         - 'traefik.enable=false'
      environment:
         - TS3SERVER_LICENSE=accept
         - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/ts3server
   Jelu:
      image: wabayang/jelu:latest
      restart: unless-stopped
      container_name: jelu
      entrypoint: java org.springframework.boot.loader.launch.JarLauncher --spring.config.additional-location=optional:file:/config/
      working_dir: /app
      volumes:
         - /etc/localtime:/etc/timezone:ro
         - /opt/jelu/config:/config
         - /opt/jelu/database:/database
         - /opt/jelu/files/images:/files/images
         - /opt/jelu/files/imports:/files/imports
      environment:
         - PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
         - TZ=Europe/Berlin
         - JAVA_HOME=/opt/java/openjdk
         - JAVA_VERSION=jdk-17.0.9+9
         - TARGETPLATFORM=linux/amd64
         - LANGUAGE=en_US:en
         - LC_ALL=en_US.UTF-8
         - JELU_DATABASE_PATH=/database
         - JELU_FILES_IMAGES=/files/images
         - JELU_FILES_IMPORTS=/files/imports
         - JELU_METADATA_CALIBRE_PATH=/calibre/fetch-ebook-metadata
         - SERVER_PORT=1111
      labels:
         - 'traefik.enable=true'
         - 'traefik.http.routers.jelu.entrypoints=http'
         - 'traefik.http.routers.jelu.rule=Host(`jelu.egirldev.co.uk`) || Host(`jelu.egirl.ing`)'
         - 'traefik.http.middlewares.jelu-https-redirect.redirectscheme.scheme=https'
         - 'traefik.http.routers.jelu.middlewares=jelu-https-redirect'
         - 'traefik.http.routers.jelu-secure.entrypoints=https'
         - 'traefik.http.routers.jelu-secure.rule=Host(`jelu.egirldev.co.uk`) || Host(`jelu.egirl.ing`)'
         - 'traefik.http.routers.jelu-secure.tls=true'
         - 'traefik.http.routers.jelu-secure.tls.certresolver=cloudflare'
         - 'traefik.http.routers.jelu-secure.tls.domains[0].main=egirldev.co.uk'
         - 'traefik.http.routers.jelu-secure.tls.domains[0].sans=jelu.egirldev.co.uk'
         - 'traefik.http.routers.jelu-secure.tls.domains[1].sans=jelu.egirl.ing'
         - 'traefik.http.routers.jelu-secure.tls.domains[1].main=jelu.egirl.ing'
         - 'traefik.http.routers.jelu-secure.service=jelu'
         - 'traefik.http.services.jelu.loadbalancer.server.port=1111'
         - 'org.opencontainers.image.ref.name=ubuntu'
         - 'org.opencontainers.image.version=22.04'
   multiscrobbler:
      image: foxxmd/multi-scrobbler:develop
      container_name: multiscrobbler
      restart: unless-stopped
      entrypoint: /init
      working_dir: /app
      volumes:
         - /opt/multiscrobbler/config:/config
      environment:
         - PUID=1000
         - PGID=1000
         - TZ=Europe/Berlin
         - PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
         - HOME=/root
         - TERM=xterm
         - S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0
         - S6_VERBOSITY=1
         - S6_STAGE2_HOOK=/docker-mods
         - VIRTUAL_ENV=/lsiopy
         - CONFIG_DIR=/config
         - NODE_ENV=production
         - IS_DOCKER=true
         - PORT=9087
      labels:
         - 'traefik.enable=true'
         - 'traefik.http.routers.multiscrobbler.entrypoints=http'
         - 'traefik.http.routers.multiscrobbler.rule=Host(`multiscrobbler.egirldev.co.uk`) || Host(`multiscrobbler.egirl.ing`)'
         - 'traefik.http.middlewares.multiscrobbler-https-redirect.redirectscheme.scheme=https'
         - 'traefik.http.routers.multiscrobbler.middlewares=multiscrobbler-https-redirect'
         - 'traefik.http.routers.multiscrobbler-secure.entrypoints=https'
         - 'traefik.http.routers.multiscrobbler-secure.rule=Host(`multiscrobbler.egirldev.co.uk`) || Host(`multiscrobbler.egirl.ing`)'
         - 'traefik.http.routers.multiscrobbler-secure.tls=true'
         - 'traefik.http.routers.multiscrobbler-secure.tls.certresolver=cloudflare'
         - 'traefik.http.routers.multiscrobbler-secure.middlewares=authelia'
         - 'traefik.http.routers.multiscrobbler-secure.tls.domains[0].main=egirldev.co.uk'
         - 'traefik.http.routers.multiscrobbler-secure.tls.domains[0].sans=multiscrobbler.egirldev.co.uk'
         - 'traefik.http.routers.multiscrobbler-secure.tls.domains[1].sans=multiscrobbler.egirl.ing'
         - 'traefik.http.routers.multiscrobbler-secure.tls.domains[1].main=multiscrobbler.egirl.ing'
         - 'traefik.http.routers.multiscrobbler-secure.service=multiscrobbler'
         - 'traefik.http.services.multiscrobbler.loadbalancer.server.port=9087'

   maloja:
      image: krateng/maloja:latest
      container_name: maloja
      restart: unless-stopped
      entrypoint: maloja run
      working_dir: /usr/src/app
      volumes:
         - /opt/maloja/:/mljdata
      environment:
         - MALOJA_DATA_DIRECTORY=/mljdata
         - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
         - MALOJA_SKIP_SETUP=true
         - PYTHONUNBUFFERED=1
         - PUID=1000
         - PGID=1000
         - S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0
         - S6_VERBOSITY=1
         - S6_STAGE2_HOOK=/docker-mods
         - VIRTUAL_ENV=/lsiopy
      labels:
         - 'traefik.enable=true'
         - 'traefik.http.routers.maloja.entrypoints=http'
         - 'traefik.http.routers.maloja.rule=Host(`scrobble.egirldev.co.uk`) || Host(`scrobble.egirl.ing`)'
         - 'traefik.http.middlewares.maloja-https-redirect.redirectscheme.scheme=https'
         - 'traefik.http.routers.maloja.middlewares=maloja-https-redirect'
         - 'traefik.http.routers.maloja-secure.entrypoints=https'
         - 'traefik.http.routers.maloja-secure.rule=Host(`scrobble.egirldev.co.uk`) || Host(`scrobble.egirl.ing`)'
         - 'traefik.http.routers.maloja-secure.tls=true'
         - 'traefik.http.routers.maloja-secure.tls.certresolver=cloudflare'
         - 'traefik.http.routers.maloja-secure.tls.domains[0].main=egirldev.co.uk'
         - 'traefik.http.routers.maloja-secure.tls.domains[0].sans=scrobble.egirldev.co.uk'
         - 'traefik.http.routers.maloja-secure.tls.domains[1].sans=scrobble.egirl.ing'
         - 'traefik.http.routers.maloja-secure.tls.domains[1].main=scrobble.egirl.ing'
         - 'traefik.http.routers.maloja-secure.service=maloja'
         - 'traefik.http.services.maloja.loadbalancer.server.port=42010'
   crowdsec-cloudflare-bouncer:
      image: crowdsecurity/cloudflare-bouncer:latest
      container_name: crowdsec-cloudflare-bouncer
      restart: unless-stopped
      volumes:
         - /var/run/docker.sock:/var/run/docker.sock:ro
         - /etc/localtime:/etc/localtime:ro
         - /opt/CFBouncer/crowdsec-cloudflare-bouncer.yaml:/etc/crowdsec/bouncers/crowdsec-cloudflare-bouncer.yaml:ro
         - /var/log/crowdsec-cloudflare-bouncer:/var/log/
   imgproxy:
      image: darthsim/imgproxy:v3.25
      container_name: imgproxy
      restart: unless-stopped
      environment:
         - IMGPROXY_LOG_LEVEL=info
         - IMGPROXY_LOG_FORMAT=text
         - IMGPROXY_BIND=:79
         - IMGPROXY_KEY=${IMGPROXY_KEY}
         - IMGPROXY_SALT=${IMGPROXY_SALT}
         - IMGPROXY_ALLOWED_SOURCES=https://twitch.tv/,https://egirl.ing/,https://egirldev.co.uk/,https://media.discordapp.com/,https://media.discordapp.net/,https://cdn.discordapp.com/,local://
         - IMGPROXY_ALLOWED_EXTENSIONS="jpeg,jpg,png,webp,gif,svg,avif"
         - IMGPROXY_FREE_MEMORY_INTERVAL=10
         - IMGPROXY_DOWNLOAD_BUFFER_SIZE=0
         - IMGPROXY_BUFFER_POOL_CALIBRATION_THRESHOLD=1024
         - IMGPROXY_ENABLE_AVIF_DETECTION=true
         - IMGPROXY_LOCAL_FILESYSTEM_ROOT=/opt/imgproxy/
      labels:
         - 'traefik.enable=true'
         - 'traefik.http.routers.imgproxy.entrypoints=http'
         - 'traefik.http.routers.imgproxy.rule=Host(`img.egirldev.co.uk`) || Host(`img.egirl.ing`)'
         - 'traefik.http.middlewares.imgproxy-https-redirect.redirectscheme.scheme=https'
         - 'traefik.http.routers.imgproxy.middlewares=imgproxy-https-redirect'
         - 'traefik.http.routers.imgproxy-secure.entrypoints=https'
         - 'traefik.http.routers.imgproxy-secure.rule=Host(`img.egirldev.co.uk`) || Host(`img.egirl.ing`)'
         - 'traefik.http.routers.imgproxy-secure.tls=true'
         - 'traefik.http.routers.imgproxy-secure.tls.certresolver=cloudflare'
         - 'traefik.http.routers.imgproxy-secure.tls.domains[0].main=egirldev.co.uk'
         - 'traefik.http.routers.imgproxy-secure.tls.domains[0].sans=img.egirldev.co.uk'
         - 'traefik.http.routers.imgproxy-secure.tls.domains[1].sans=img.egirl.ing'
         - 'traefik.http.routers.imgproxy-secure.tls.domains[1].main=img.egirl.ing'
         - 'traefik.http.routers.imgproxy-secure.service=imgproxy'
         - 'traefik.http.services.imgproxy.loadbalancer.server.port=79'
      volumes:
         - /opt/imgproxy/:/opt/imgproxy/
   ghost:
      image: ghost:5
      container_name: ghost
      restart: unless-stopped
      environment:
         - url=https://blog.egirl.ing
         - NODE_ENV=production
         - TZ=Europe/Berlin
         - VIRTUAL_HOST=blog.egirl.ing
         - VIRTUAL_PORT=2368
         - database__client=mysql
         - database__connection__host=database-ghost
         - database__connection__user=ghost
         - database__connection__password=${GHOST_DB_PW}
         - database__connection__database=ghost
      labels:
         - 'traefik.enable=true'
         - 'traefik.http.routers.ghost.entrypoints=http'
         - 'traefik.http.routers.ghost.rule=Host(`blog.egirldev.co.uk`) || Host(`blog.egirl.ing`)'
         - 'traefik.http.middlewares.ghost-https-redirect.redirectscheme.scheme=https'
         - 'traefik.http.routers.ghost.middlewares=ghost-https-redirect'
         - 'traefik.http.routers.ghost-secure.entrypoints=https'
         - 'traefik.http.routers.ghost-secure.rule=Host(`blog.egirldev.co.uk`) || Host(`blog.egirl.ing`)'
         - 'traefik.http.routers.ghost-secure.tls=true'
         - 'traefik.http.routers.ghost-secure.tls.certresolver=cloudflare'
         - 'traefik.http.routers.ghost-secure.tls.domains[0].main=egirldev.co.uk'
         - 'traefik.http.routers.ghost-secure.tls.domains[0].sans=blog.egirldev.co.uk'
         - 'traefik.http.routers.ghost-secure.tls.domains[1].sans=blog.egirl.ing'
         - 'traefik.http.routers.ghost-secure.tls.domains[1].main=egirl.ing'
         - 'traefik.http.routers.ghost-secure.service=ghost'
         - 'traefik.http.services.ghost.loadbalancer.server.port=2368'
      volumes:
         - /opt/ghost/:/var/lib/ghost/content
   database-ghost:
      image: mysql:9
      container_name: ghost_db
      restart: always
      volumes:
         - /opt/ghostDB/:/var/lib/mysql
      environment:
         MYSQL_ROOT_PASSWORD: ${GHOST_DB_ROOT_PW}
         MYSQL_DATABASE: ghost
         MYSQL_USER: ghost
         MYSQL_PASSWORD: ${GHOST_DB_PW}
   mail:
      image: bytemark/smtp
      restart: always
